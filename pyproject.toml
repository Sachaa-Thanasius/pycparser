[tool.ruff]
include = ["cparsing/*"]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
]
extend-ignore = [
    "S101",   # Use of assert here is a known quantity for typing cases.
    "SIM105", # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "C90",    # McCabe complexity.
    "PD011",  # Erroneous issue that triggers for any .values attribute access at all.
    "S311",   # No need for cryptographically secure random number generation in this use case.
    "ANN101", # Type of Self for self is usually implicit and/or known by the type-checker.
    "ANN102", # Type of type[Self] for cls is usually implicit and/or known by the type-checker.
    "ANN204", # Special method return types are usually implicit and/or known by type checker.
    "ANN401", # Any is needed for some parameters.
    "UP038",  # isinstance performs better with tuples than unions.
    "PT001",  # pytest recommends against empty parentheses on pytest.fixture.
    "PYI036", # Bug with annotations for __exit__.
    "PLR",    # Complexity things.
    # Recommended by Ruff when using Ruff format.
    "E111",
    "E114",
    "E117",
    "COM812",
    "COM819",
    "E501",
    "ISC001",
    "ISC002",
    # For strings in exception calls.
    "TRY003",
    "EM101",
    "EM102",
    "SIM108", # Don't always use ternary for readability.
    "RET505", # Allow returns in else and elif for readability.
    "ERA001", # Commented code.
]
unfixable = [
    "ERA", # I don't want anything erroneously detected deleted by this.
]

[tool.ruff.lint.per-file-ignores]
"cparsing/tests/*" = [
    "T201",   # Allow printing.
    "ANN201", # Allow lack of return annotations. Tests return None usually.
    "ANN202",
]
"cparsing/c_lexer.py" = [
    "RUF012", # Mutable class attributes.
    "F821",   # Undefined names are allowed because of metaclass hackery.
]
"cparsing/c_parser.py" = [
    "ANN201", # Return annotations aren't helpful here.
    "F811",   # Redefining methods is allowed because of metaclass hackery.
    "F821",   # Undefined names are allowed because of metaclass hackery.
    "S105",
]
"cparsing/c_ast.py" = [
    "A002", # Allow some shadowing.
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "preserve"

[tool.pyright]
include = ["cparsing"]
pythonVersion = "3.9"
typeCheckingMode = "strict"

reportPrivateUsage = "none"
reportUnnecessaryIsInstance = "information"
reportUnnecessaryTypeIgnoreComment = "warning"

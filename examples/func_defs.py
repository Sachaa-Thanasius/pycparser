# -----------------------------------------------------------------
# pycparser: func_defs.py
#
# Using pycparser for printing out all the functions defined in a
# C file.
#
# This is a simple example of traversing the AST generated by
# pycparser. Call it from the root directory of pycparser.
#
# Eli Bendersky [https://eli.thegreenplace.net/]
# License: BSD
# -----------------------------------------------------------------
from cparsing import c_ast, parse_file


class FuncDefVisitor(c_ast.NodeVisitor):
    """A simple visitor for FuncDef nodes that prints the names and locations of function definitions."""

    def visit_FuncDef(self, node: c_ast.FuncDef) -> None:
        print(f"{node.decl.name} at {node.decl.coord}")


def show_func_defs(filename: str) -> None:
    # Note that cpp is used. Provide a path to your own cpp or make sure one exists in PATH.
    ast = parse_file(filename, use_cpp=True, cpp_args=r"-Iutils/fake_libc_include")

    v = FuncDefVisitor()
    v.visit(ast)


def main():
    import argparse

    argparser = argparse.ArgumentParser()
    argparser.add_argument("filename", default="examples/c_files/memmgr.c")
    args = argparser.parse_args()

    show_func_defs(args.filename)


if __name__ == "__main__":
    raise SystemExit(main())
